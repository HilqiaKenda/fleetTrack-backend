# Generated by Django 5.2.6 on 2025-09-20 17:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Carrier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "dot_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("mc_number", models.CharField(blank=True, max_length=20)),
                ("address", models.TextField(blank=True)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("driver_initial", models.CharField(max_length=10, unique=True)),
                ("full_name", models.CharField(max_length=255)),
                ("license_number", models.CharField(max_length=50, unique=True)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=255)),
                (
                    "latitude",
                    models.FloatField(
                        help_text="Latitude coordinate",
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "longitude",
                    models.FloatField(
                        help_text="Longitude coordinate",
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("country", models.CharField(default="USA", max_length=50)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["address"],
                "indexes": [
                    models.Index(
                        fields=["address"], name="track_locat_address_b211b2_idx"
                    ),
                    models.Index(
                        fields=["city", "state"], name="track_locat_city_265027_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("truck_number", models.CharField(max_length=50, unique=True)),
                ("make", models.CharField(blank=True, max_length=50)),
                ("model", models.CharField(blank=True, max_length=50)),
                ("year", models.PositiveIntegerField(blank=True, null=True)),
                ("vin", models.CharField(blank=True, max_length=17, unique=True)),
                ("license_plate", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "carrier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="track.carrier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("shipper_and_commodity", models.CharField(blank=True, max_length=255)),
                (
                    "cycle_rule",
                    models.CharField(
                        choices=[
                            ("70hr/8day", "70hr/8day"),
                            ("60hr/7day", "60hr/7day"),
                        ],
                        default="70hr/8day",
                        max_length=20,
                    ),
                ),
                ("total_miles_driving", models.FloatField(default=0.0)),
                ("total_mileage_today", models.FloatField(default=0.0)),
                ("total_driving_hours", models.FloatField(default=0.0)),
                ("total_on_duty_hours", models.FloatField(default=0.0)),
                ("total_off_duty_hours", models.FloatField(default=0.0)),
                ("total_sleeper_hours", models.FloatField(default=0.0)),
                ("remarks", models.TextField(blank=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "co_driver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="co_driver_trips",
                        to="track.driver",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="track.driver",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="track.vehicle",
                    ),
                ),
            ],
            options={
                "ordering": ["-date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TripEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("driving", "Driving"),
                            ("on_duty", "On Duty (Not Driving)"),
                            ("off_duty", "Off Duty"),
                            ("sleeper", "Sleeper Berth"),
                            ("rest_break", "Rest Break"),
                            ("fuel_stop", "Fuel Stop"),
                            ("meal_break", "Meal Break"),
                            ("inspection", "Vehicle Inspection"),
                            ("loading", "Loading"),
                            ("unloading", "Unloading"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                (
                    "duration",
                    models.FloatField(
                        default=0.0,
                        help_text="Duration in hours",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "miles_driven",
                    models.FloatField(
                        default=0.0,
                        help_text="Miles driven during this event",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trip_events",
                        to="track.location",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="track.trip",
                    ),
                ),
            ],
            options={
                "ordering": ["timestamp"],
                "indexes": [
                    models.Index(
                        fields=["trip", "timestamp"],
                        name="track_tripe_trip_id_aaabb3_idx",
                    ),
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="track_tripe_event_t_17f046_idx",
                    ),
                    models.Index(
                        fields=["location", "timestamp"],
                        name="track_tripe_locatio_21e956_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(
                fields=["date", "driver"], name="track_trip_date_630936_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(
                fields=["vehicle", "date"], name="track_trip_vehicle_6351cb_idx"
            ),
        ),
    ]
